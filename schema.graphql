type ItemListedEntity @entity {
  id: ID!
  ts: BigInt!
  collection: Bytes
  tokenId: BigInt!
  uri: String!
  seller: User!
  currency: Bytes!
  minPrice: BigInt!
  expiry: BigInt!
  isFixedPrice: Boolean!
  status: Boolean!
}

type TradeExecutedEntity @entity {
  id: ID!
  ts: BigInt!
  collection: Bytes
  tokenId: BigInt!
  seller: Bytes!
  buyer: Bytes!
  currency: Bytes!
  price: BigInt!
  isVoucher: Boolean!
}

type VoucherWrittenEntity @entity {
  id: ID!
  ts: BigInt!
  collection: Bytes
  tokenId: BigInt!
  uri: String!
  currency: Bytes!
  signature: Bytes!
}

type CollectionWhitelistedEntity @entity {
  id: ID!
  ts: BigInt!
  collection: Bytes!
}

type CurrencyWhitelistedEntity @entity {
  id: ID!
  ts: BigInt!
  addOrRemove: Boolean!
}

type ItemBoughtEntity @entity {
  id: ID!
  ts: BigInt!
  collection: Bytes
  tokenId: BigInt!
  buyer: User!
  isVoucher: Boolean!
  status: Boolean!
}

type OfferCreatedEntity @entity {
  id: ID!
  ts: BigInt!
  collection: Bytes
  tokenId: BigInt!
  offerPrice: BigInt!
  buyer: User!
  isVoucher: Boolean!
  status: Boolean!
}

type FeePercentUpadatedEntity @entity {
  id: ID!
  ts: BigInt!
  newFeePercent: BigInt!
}

type OfferAcceptedEntity @entity {
  id: ID!
  ts: BigInt!
  collection: Bytes
  tokenId: BigInt!
  buyer: User!
}

type OfferRejectedEntity @entity {
  id: ID!
  ts: BigInt!
  collection: Bytes
  tokenId: BigInt!
  buyer: User!
  status: Boolean!
}

type User @entity {
  id: ID!
  userAddress: Bytes! #address
  nftOwne: [ItemBoughtEntity!] @derivedFrom(field: "buyer") #address
  offerAccepted: [OfferAcceptedEntity!] @derivedFrom(field: "buyer") #address
  offerRecjected: [OfferRejectedEntity!] @derivedFrom(field: "buyer") #address
  offerCreated: [OfferCreatedEntity!] @derivedFrom(field: "buyer") #address
  itemListed: [ItemListedEntity!] @derivedFrom(field: "seller") #address  #address
  ts: BigInt!
}
